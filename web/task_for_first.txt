Необходимо написать клиент к API VK,
который будет считать распределение возрастов друзей
для указанного пользователя. То есть на вход подается username
или user_id пользователя, на выходе получаем список пар
(<возраст>, <количество друзей с таким возрастом>),
отсортированный по убыванию по второму ключу (количество друзей)
и по возрастанию по первому ключу (возраст). Например:

[(26, 8), (21, 6), (22, 6), (40, 2), (19, 1), (20, 1)]
Для этого вам понадобятся два метода API VK:

1. Метод для получения id пользователя
(https://vk.com/dev/users.get). Он необходим, так как на вход
может подаваться username пользователя.
URL запроса к API VK: https://api.vk.com/method/users.get

2. Метод для получения списка друзей пользователя
(https://vk.com/dev/friends.get). URL запроса к API VK:
https://api.vk.com/method/friends.get

В итоге запросы будут иметь вид:

– Для получения id пользователя по username или user_id:

https://api.vk.com/method/users.get?v=5.71&access_token=[token]&user_ids=[user_id]

– Для получения списка друзей:

https://api.vk.com/method/friends.get?v=5.71&access_token=[token]&user_id=[user_id]&fields=bdate


При решении задания обратите внимание на несколько моментов.

В запросе мы  используем версию  API VK - «5.71».
В запросе получения списка друзей добавлен ключ
fields=bdate.
Он необходим для того, чтобы API сразу вернуло пользователей
с датами рождения.
При анализе ответа, полученного методом friends.get, можно заметить,
что bdate есть не у всех пользователей и у некоторых в bdate
отсутствует год рождения. Поэтому необходимо пропускать
этот случай. Примеры возможных значений: "bdate":"6.6",
"bdate":"25.8.1993".
Для вычисления возраста, необходимо взять текущий год ,
и вычесть из него год рождения пользователя, полученный из API
(без учета месяца и числа).